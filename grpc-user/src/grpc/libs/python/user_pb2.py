# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: user.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='user.proto',
  package='xmpp.ejabberd.grpc.user',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\nuser.proto\x12\x17xmpp.ejabberd.grpc.user\"\'\n\x13isUserExistsRequest\x12\x10\n\x08username\x18\x01 \x01(\t\"&\n\x14isUserExistsResponse\x12\x0e\n\x06result\x18\x01 \x01(\x08\x32s\n\x04User\x12k\n\x0cisUserExists\x12,.xmpp.ejabberd.grpc.user.isUserExistsRequest\x1a-.xmpp.ejabberd.grpc.user.isUserExistsResponseb\x06proto3')
)




_ISUSEREXISTSREQUEST = _descriptor.Descriptor(
  name='isUserExistsRequest',
  full_name='xmpp.ejabberd.grpc.user.isUserExistsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='xmpp.ejabberd.grpc.user.isUserExistsRequest.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=78,
)


_ISUSEREXISTSRESPONSE = _descriptor.Descriptor(
  name='isUserExistsResponse',
  full_name='xmpp.ejabberd.grpc.user.isUserExistsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='xmpp.ejabberd.grpc.user.isUserExistsResponse.result', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=118,
)

DESCRIPTOR.message_types_by_name['isUserExistsRequest'] = _ISUSEREXISTSREQUEST
DESCRIPTOR.message_types_by_name['isUserExistsResponse'] = _ISUSEREXISTSRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

isUserExistsRequest = _reflection.GeneratedProtocolMessageType('isUserExistsRequest', (_message.Message,), {
  'DESCRIPTOR' : _ISUSEREXISTSREQUEST,
  '__module__' : 'user_pb2'
  # @@protoc_insertion_point(class_scope:xmpp.ejabberd.grpc.user.isUserExistsRequest)
  })
_sym_db.RegisterMessage(isUserExistsRequest)

isUserExistsResponse = _reflection.GeneratedProtocolMessageType('isUserExistsResponse', (_message.Message,), {
  'DESCRIPTOR' : _ISUSEREXISTSRESPONSE,
  '__module__' : 'user_pb2'
  # @@protoc_insertion_point(class_scope:xmpp.ejabberd.grpc.user.isUserExistsResponse)
  })
_sym_db.RegisterMessage(isUserExistsResponse)



_USER = _descriptor.ServiceDescriptor(
  name='User',
  full_name='xmpp.ejabberd.grpc.user.User',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=120,
  serialized_end=235,
  methods=[
  _descriptor.MethodDescriptor(
    name='isUserExists',
    full_name='xmpp.ejabberd.grpc.user.User.isUserExists',
    index=0,
    containing_service=None,
    input_type=_ISUSEREXISTSREQUEST,
    output_type=_ISUSEREXISTSRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_USER)

DESCRIPTOR.services_by_name['User'] = _USER

# @@protoc_insertion_point(module_scope)
